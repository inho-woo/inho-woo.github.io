I"I4<p>고객사 CS 기반 MES 화면을 생성함에 있어서 현재 회사는 프로시저를 CRUD 를 전부 나눠서 제작이 되어있었다.
하나하나 일일이 만들지 말고 하나로 <strong>INSERT, UPDATE, DELETE</strong> 를 할수있는 방법이 있을까 하고 찾아보았는데
마침 <strong>MERGE</strong> 라는 문법을 찾게 되어 유용하게 쓰일꺼 같아 포스팅을 하게 되었다.</p>

<h3 id="merge">MERGE?</h3>
<p>MERGE 문을 사용하면 변경할 테이블에 데이터가 존재하는지 체크하고, UPDATE, DELETE, INSERT를 한 번에 작업이 가능한 SQL문이다.
보통 단일(한개의) 테이블에 UPDATE 또는 INSERT를 하는 경우 많이 사용하지만, 두개의 테이블을 비교하거나 서브 쿼리의 결과에 따라서 UPDATE, INSERT 작업이 가능하다.</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql">  <span class="n">MERGE</span> <span class="k">INTO</span> <span class="p">(</span><span class="err">변경할</span> <span class="err">테이블</span><span class="p">)</span>
  <span class="k">USING</span> <span class="p">(</span><span class="err">비교할</span> <span class="err">테이블</span> <span class="o">|</span> <span class="err">서브쿼리</span><span class="p">)</span>
  <span class="k">ON</span> <span class="p">(</span><span class="err">조건문</span><span class="p">)</span>
  <span class="k">WHERE</span> <span class="n">MATCHED</span> <span class="k">THEN</span>
  <span class="p">(</span><span class="err">조건을</span> <span class="err">만족할경우</span><span class="p">)</span>
  <span class="c1">-- UPDATE SET  ~ </span>
  <span class="c1">-- DELETE ~ </span>
  <span class="k">WHEN</span> <span class="k">NOT</span> <span class="n">MATCHED</span> <span class="k">THEN</span>
  <span class="c1">-- INSERT INTO ~</span></code></pre></figure>

<p>기본적인 예시를 이렇게 된다.</p>

<p>하나의 테이블로 MERGE문을 사용하는 방법은 <strong>DUAL</strong> 이라는 dummy 테이블을 이용해 처리한다.</p>

<p>한글로 보다 쉽게(?) 이해 할수 있도록 작성하였다.(원래 이렇게 하면 언된다..)</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="n">MERGE</span> <span class="k">INTO</span> <span class="err">부서</span> <span class="k">AS</span> <span class="n">A</span>
<span class="k">USING</span> <span class="p">(</span><span class="k">SELECT</span> <span class="mi">1</span> <span class="k">AS</span> <span class="n">DUAL</span><span class="p">)</span> <span class="k">AS</span> <span class="n">B</span>
   <span class="k">ON</span> <span class="p">(</span><span class="n">A</span><span class="p">.</span><span class="err">부서번호</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span>
 <span class="k">WHEN</span> <span class="n">MATCHED</span> <span class="k">THEN</span>
   <span class="k">UPDATE</span> <span class="k">SET</span> <span class="n">A</span><span class="p">.</span><span class="err">부서명</span> <span class="o">=</span> <span class="s1">'IT'</span><span class="p">,</span> <span class="n">A</span><span class="p">.</span><span class="err">직원명</span> <span class="o">=</span> <span class="s1">'inho-woo'</span>
 <span class="k">WHEN</span> <span class="k">NOT</span> <span class="n">MATCHED</span> <span class="k">THEN</span>
   <span class="k">INSERT</span><span class="p">(</span><span class="err">부서번호</span><span class="p">,</span> <span class="err">부서명</span><span class="p">,</span> <span class="err">직원명</span><span class="p">)</span> <span class="k">VALUES</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span> <span class="s1">'IT'</span><span class="p">,</span> <span class="s1">'inho-woo'</span><span class="p">)</span>
<span class="p">;</span></code></pre></figure>

<p><strong>(SELECT 1 AS DUAL) AS B</strong>  이부분은 dummy 서브 쿼리이기 떄문에 그대로 사용해도 무방하다.</p>

<p>부서 테이블에 부서번호 = ‘1’에 만족하는 값이 있으면 UPDATE, 없으면 INSERT 한다.</p>

<p>변수를 사용해 쿼리문을 작성하면 다움과 같다.</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="k">DECLARE</span> <span class="o">@</span><span class="err">부서번호</span> <span class="nb">INT</span> <span class="o">=</span> <span class="mi">1</span>
<span class="k">DECLARE</span> <span class="o">@</span><span class="err">부서명</span> <span class="n">NVARCHAR</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="o">=</span> <span class="s1">'IT'</span>
<span class="k">DECLARE</span> <span class="o">@</span><span class="err">직원명</span> <span class="n">NVARCHAR</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="o">=</span> <span class="s1">'inho-woo'</span>

<span class="n">MERGE</span> <span class="k">INTO</span> <span class="err">부서</span> <span class="k">AS</span> <span class="n">A</span>
<span class="k">USING</span> <span class="p">(</span><span class="k">SELECT</span> <span class="mi">1</span> <span class="k">AS</span> <span class="n">DUAL</span><span class="p">)</span> <span class="k">AS</span> <span class="n">B</span>
   <span class="k">ON</span> <span class="p">(</span><span class="n">A</span><span class="p">.</span><span class="err">부서번호</span> <span class="o">=</span> <span class="o">@</span><span class="err">부서번호</span><span class="p">)</span>
 <span class="k">WHEN</span> <span class="n">MATCHED</span> <span class="k">THEN</span>
   <span class="k">UPDATE</span> <span class="k">SET</span> <span class="n">A</span><span class="p">.</span><span class="err">부서명</span> <span class="o">=</span> <span class="o">@</span><span class="err">부서명</span><span class="p">,</span> <span class="n">A</span><span class="p">.</span><span class="err">직원명</span> <span class="o">=</span> <span class="o">@</span><span class="err">직원명</span>
 <span class="k">WHEN</span> <span class="k">NOT</span> <span class="n">MATCHED</span> <span class="k">THEN</span>
   <span class="k">INSERT</span><span class="p">(</span><span class="err">부서번호</span><span class="p">,</span> <span class="err">부서명</span><span class="p">,</span> <span class="err">직원명</span><span class="p">)</span> <span class="k">VALUES</span><span class="p">(</span><span class="o">@</span><span class="err">부서번호</span><span class="p">,</span> <span class="o">@</span><span class="err">부서명</span><span class="p">,</span> <span class="o">@</span><span class="err">직원명</span><span class="p">)</span>
<span class="p">;</span></code></pre></figure>

<p>변수를 사용해 쿼리문을 작성하면 보다 이해하기가 더 쉽다.</p>

<p>다음은 <strong>서브쿼리</strong> 를 이용해 작성을 해보았다.</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="k">DECLARE</span> <span class="o">@</span><span class="err">부서번호</span> <span class="nb">INT</span> <span class="o">=</span> <span class="mi">1</span>

<span class="n">MERGE</span> <span class="k">INTO</span> <span class="err">부서</span> <span class="k">AS</span> <span class="n">A</span>
<span class="k">USING</span> <span class="p">(</span><span class="k">SELECT</span> <span class="k">DISTINCT</span> 
              <span class="n">D</span><span class="p">.</span><span class="err">부서번호</span>   <span class="k">AS</span> <span class="err">부서번호</span>
            <span class="p">,</span> <span class="n">D</span><span class="p">.</span><span class="err">부서명</span>    <span class="k">AS</span> <span class="err">부서명</span>
            <span class="p">,</span> <span class="n">D</span><span class="p">.</span><span class="err">직원명</span>    <span class="k">AS</span> <span class="err">직원명</span>
         <span class="k">FROM</span> <span class="err">직원</span> <span class="k">AS</span> <span class="n">E</span>
        <span class="k">INNER</span> <span class="k">JOIN</span> <span class="err">부서이력</span> <span class="k">AS</span> <span class="n">D</span>
           <span class="k">ON</span> <span class="n">E</span><span class="p">.</span><span class="err">부서번호</span> <span class="o">=</span> <span class="n">D</span><span class="p">.</span><span class="err">부서번호</span>
        <span class="k">WHERE</span> <span class="n">E</span><span class="p">.</span><span class="err">부서번호</span> <span class="o">=</span> <span class="o">@</span><span class="err">부서번호</span><span class="p">)</span> <span class="k">AS</span> <span class="n">B</span>
   <span class="k">ON</span> <span class="p">(</span><span class="n">A</span><span class="p">.</span><span class="err">부서번호</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="err">부서번호</span><span class="p">)</span>
 <span class="k">WHEN</span> <span class="n">MATCHED</span> <span class="k">THEN</span>
   <span class="k">UPDATE</span> <span class="k">SET</span> <span class="n">A</span><span class="p">.</span><span class="err">부서명</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="err">부서명</span>
            <span class="p">,</span> <span class="n">A</span><span class="p">.</span><span class="err">직원명</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="err">직원명</span>
 <span class="k">WHEN</span> <span class="k">NOT</span> <span class="n">MATCHED</span> <span class="k">THEN</span>
   <span class="k">INSERT</span><span class="p">(</span><span class="err">부서번호</span><span class="p">,</span> <span class="err">부서명</span><span class="p">,</span> <span class="err">직원명</span><span class="p">)</span> 
   <span class="k">VALUES</span><span class="p">(</span><span class="n">B</span><span class="p">.</span><span class="err">부서번호</span><span class="p">,</span> <span class="n">B</span><span class="p">.</span><span class="err">부서명</span><span class="p">,</span> <span class="n">B</span><span class="p">.</span><span class="err">직원명</span><span class="p">)</span>
<span class="p">;</span></code></pre></figure>

<p>USING 절에 서브 쿼리를 사용한 쿼리로, 직원 테이블에 부서번호 = ‘1’이 존재하고, 서브 쿼리 결과와 부서 테이블을 비교하여 존재 여부에 따라서 UPDATE, INSERT 한다.</p>

<p>다음은 테이블 을 조인했을떄의 쿼리이다.</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="n">MERGE</span> <span class="k">INTO</span> <span class="err">부서</span> <span class="k">AS</span> <span class="n">A</span>
<span class="k">USING</span> <span class="err">부서이력</span> <span class="k">AS</span> <span class="n">B</span>
   <span class="k">ON</span> <span class="p">(</span><span class="n">A</span><span class="p">.</span><span class="err">부서번호</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="err">부서번호</span><span class="p">)</span>
 <span class="k">WHEN</span> <span class="n">MATCHED</span> <span class="k">THEN</span>
   <span class="k">UPDATE</span> <span class="k">SET</span> <span class="n">A</span><span class="p">.</span><span class="err">부서명</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="err">부서명</span>
            <span class="p">,</span> <span class="n">A</span><span class="p">.</span><span class="err">직원명</span>   <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="err">직원명</span>
 <span class="k">WHEN</span> <span class="k">NOT</span> <span class="n">MATCHED</span> <span class="k">THEN</span>
   <span class="k">INSERT</span><span class="p">(</span><span class="err">부서번호</span><span class="p">,</span> <span class="err">부서명</span><span class="p">,</span> <span class="err">직원명</span><span class="p">)</span> 
   <span class="k">VALUES</span><span class="p">(</span><span class="n">B</span><span class="p">.</span><span class="err">부서번호</span><span class="p">,</span> <span class="n">B</span><span class="p">.</span><span class="err">부서명</span><span class="p">,</span> <span class="n">B</span><span class="p">.</span><span class="err">직원명</span><span class="p">)</span>
<span class="p">;</span></code></pre></figure>

<p>부서이력 테이블의 값이 dept 테이블에 존재하는 경우, 부서이력 테이블의 값으로 UPDATE, 없으면 INSERT 한다.</p>

<p>MERGE 문을 사용할때의 주의사항이 있다.</p>

<p><strong>1. USING 절에는 AS = 별칭 이 필수이다.</strong></p>

<p><strong>2. 쿼리문 끝에는 항상 ; = 세미콜론 을 넣어줘야 한다.</strong></p>

<p><strong>3. USING 절의 데이터에 변경할 테이블과 비교할 테이블의 KEY 컬럼 값이 중복으로 선언항 수 었다.</strong></p>

<p>이렇게 MERGE문을 알아보았다. 보다 유용하게 사용할수 있을꺼 같아 나름대로 정리를 해보았다.</p>
:ET